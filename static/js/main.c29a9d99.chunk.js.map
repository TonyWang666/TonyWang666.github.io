{"version":3,"sources":["content/images/homePicture.jpg","content/images/github.svg","content/images/gmail.svg","content/images/linkedin.svg","content/documents/resume.pdf","components/selectBar.js","components/Links.js","containers/PastProjects/MovieZone.js","containers/PastProjects/Voluntu.js","containers/PastProjects/YearOfSong.js","containers/Projects.js","containers/Resume.js","containers/Home.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","withRouter","props","classes","React","useState","open","setOpen","useTheme","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","Drawer","variant","paper","direction","Divider","List","text","icon","redirectTo","map","ListItem","button","key","history","push","ListItemIcon","ListItemText","primary","children","Links","href","target","rel","src","gmailIcon","alt","height","githubIcon","linkedinIcon","MovieZone","Voluntu","YearOfSong","Projects","state","option","change","bind","x","console","log","this","setState","Typography","Button","Component","Resume","title","pdfProfile","Home","Box","HomePicture","AppRouter","exact","path","render","createMuiTheme","typography","fontFamily","htmlFontSize","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c29a9d99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homePicture.c78ada96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.b986b4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.619231ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.6bfbb080.pdf\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n    AppBar,\r\n    Divider,\r\n    IconButton,\r\n    CssBaseline,\r\n    Drawer,\r\n    List,\r\n    Toolbar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(8) + 1\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\nconst CustomAppBar = props => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n    \r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className = {classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open\r\n              })}\r\n          >\r\n              <Toolbar>\r\n                  <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick = {handleDrawerOpen}  \r\n                      className={clsx(classes.menuButton, {\r\n                          [classes.hide]: open\r\n                      })}                  \r\n                  >\r\n                      <MenuIcon />\r\n                  </IconButton>\r\n              </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n              variant=\"permanent\"\r\n              className={clsx(classes.drawer, {\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open\r\n              })}\r\n              classes={{\r\n                  paper: clsx({\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open\r\n                  })\r\n              }}\r\n              open = {open}\r\n          >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n              <Divider />\r\n              <List>\r\n                  {[\r\n                      { text: \"Home\", icon: <HomeIcon />, redirectTo: \"/\" },\r\n                      { text: \"Resume\", icon: <DescriptionIcon />, redirectTo: \"/Resume\" },\r\n                      { text: \"Projects\", icon: <BuildIcon />, redirectTo: \"/Projects\" },\r\n                  ].map(({ text, icon, redirectTo}) => (\r\n                      <ListItem\r\n                          button\r\n                          key = {text}\r\n                          onClick = {() => {\r\n                              props.history.push(redirectTo);\r\n                          }}\r\n                      >\r\n                          <ListItemIcon>{icon}</ListItemIcon>\r\n                          <ListItemText primary = {text} />\r\n                      </ListItem>\r\n                  ))}\r\n              </List>\r\n              <Divider />\r\n          </Drawer>\r\n          {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(CustomAppBar);\r\n","\r\nimport React from \"react\";\r\nimport { githubIcon, gmailIcon, linkedinIcon } from \"../content/images\";\r\nconst Links = () => (\r\n  <div className=\"icon-link\">\r\n    <a\r\n      href=\"mailto:tonyjiaxiangwang@gmail.com\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <img src={gmailIcon} alt=\"gmail-link\" height=\"30px\" width=\"30px\" />\r\n    </a>\r\n    <a\r\n      href=\"https://github.com/TonyWang666\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <img src={githubIcon} alt=\"github-link\" height=\"30px\" width=\"30px\" />\r\n    </a>\r\n    <a\r\n      href=\"https://www.linkedin.com/in/jiaixiang-wang-02960913a\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <img src={linkedinIcon} alt=\"LinkedIn-link\" height=\"30px\" width=\"30px\" />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default Links;\r\n","import React, { Fragment } from \"react\";\r\nconst MovieZone = () => (\r\n    <Fragment>\r\n        <h1> Movie Zone </h1>\r\n        <h3> Project Description</h3>\r\n        <p className = \"des text\">The Movie Zone is a website I made in class 122B. Honestly, it is my child. I spent 3 months on this product with all my passion and tons of \"hairs\"\r\n        <br /><br />I used microservice with MySql for its database. There are 4 databases work separately and independently.\r\n        <br /><br />I implemented the back-end with Java, which is my most proficient language.\r\n        <br /><br />The front-end I used JavaScript and jQuery!\r\n        </p>\r\n    </Fragment>\r\n);\r\n\r\nexport default MovieZone;","import React, { Fragment } from \"react\";\r\nconst Voluntu = () => (\r\n    <Fragment>\r\n        <h1> Voluntu </h1>\r\n        <h3> Project Description</h3>\r\n        <p className = \"des text\">The Voluntu is a website I participated last year. Generally speaking, it is a website that arranges the \r\n        volunteer activities in orange county. \r\n        <br /><br />Student can register as a volunteer and schedule the time for joining different events.\r\n        <br /><br />I implemented the DashBoard with antd library for showing the hour of graph.\r\n        <br /><br />This project will be able to help thousands of student in south california to participate in voluneer activities.\r\n        </p>\r\n    </Fragment>\r\n);\r\n\r\nexport default Voluntu;","import React, { Fragment } from \"react\";\r\nconst YearOfSong = () => (\r\n    <Fragment>\r\n        <h1>Predicting Year of Song </h1> \r\n        <h3> Project Description</h3>\r\n        <p className = \"des text\">\"Predicting year of song\" is a data-mining project that can predict the year of the song given the attributes\r\n        of the songs such as timbre...... \r\n        <br /><br />Our training data set contains most of the American music from 1960s to 2010s.\r\n        <br /><br />The langauge of this project is Python, and also contains techniques of Principal Component Analysis, Linear Regression, Support Vector Machine\r\n        <br /><br />The error rate is less than 20%\r\n        <br /><br />I worked with a team of 3 and finished in 2 weeks.\r\n        </p>\r\n    </Fragment>\r\n);\r\n\r\nexport default YearOfSong;","import React, { Fragment, Component } from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core/\";\r\nimport { Links } from \"../components\"\r\nimport {MovieZone, Voluntu, YearOfSong} from \"./PastProjects\";\r\nclass Projects extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      option: 1,\r\n    }\r\n    this.change = this.change.bind(this);\r\n  }\r\n  change(x = 0){\r\n    console.log(\"Inside change, x is: \" + x);\r\n    this.setState({\r\n      option : x\r\n    });\r\n    console.log(\"after change, option is: \" + this.state.option);\r\n  }\r\n  render(){\r\n    return (\r\n      <Fragment>\r\n        <div className=\"split left\">\r\n          <header className=\"App-header\">\r\n            <Typography variant=\"h1\">Project List</Typography>\r\n              <br />\r\n              <Button onClick={() => this.change(0)}>Movie Zone</Button>\r\n              <Button onClick={() => this.change(1)}>Peer Genius</Button>\r\n              <Button onClick={() => this.change(2)}>Predicting Year of Song</Button>\r\n          </header>\r\n          <footer> <Links /> </footer>\r\n        </div>\r\n        <div className=\"split right\">\r\n          {console.log(\"option here is : \" + this.state.option)}\r\n          { this.state.option === 0 ? <MovieZone/> : this.state.option === 1 ? <Voluntu /> : <YearOfSong />}\r\n        </div> \r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Projects;\r\n","import React, { Fragment } from \"react\";\r\nimport pdfProfile from \"../content/documents/resume.pdf\"\r\nimport { Typography } from \"@material-ui/core/\";\r\nimport { Links } from \"../components\";\r\n\r\nconst Resume = () => (\r\n      <Fragment>\r\n        <div className=\"split left\">\r\n          <Typography variant=\"h1\">Resume</Typography>\r\n          <br />\r\n          <footer> <Links /> </footer>\r\n        </div>\r\n        <div className=\"split right\">\r\n          <iframe\r\n            title=\"resume\"\r\n            src={ pdfProfile }\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          ></iframe>\r\n        </div>\r\n      </Fragment>\r\n);\r\n\r\nexport default Resume;\r\n","import React, { Fragment } from \"react\";\r\nimport { HomePicture } from \"../content/images\";\r\nimport { Box, Typography } from \"@material-ui/core/\";\r\nimport { Links } from \"../components\";\r\n\r\nconst Home = () => (\r\n    <Fragment>\r\n        <div className=\"split left text\">\r\n            <Typography variant=\"h5\">\r\n                <Box>\r\n                    <strong>Welcome to Tony's website!</strong> <br /> <br />\r\n                    My name is Jiaxiang Wang(Tony).<br />\r\n                    Currently, I am computer science major student at <strong>University of California, Irvine</strong>. <br />\r\n                    My expected gradutating time is <strong> June 2020 </strong>. <br />\r\n                    I have experience both with the <strong>Front-end </strong>and <strong>Back-end</strong> developing.\r\n                </Box>\r\n                <br />\r\n                <Box>\r\n                    Below is my work experience: <br />\r\n                    Front-End Developer, Baidu Inc. Shenzhen, China\r\n                    <br />\r\n                    Software Development Intern, Ardent Labs, Irvine, CA\r\n                </Box>\r\n            </Typography>\r\n            <footer> <Links /> </footer>\r\n        </div>\r\n        <div className = \"split right text\">\r\n            <img src = {HomePicture} alt=\"PictureOfTony\" width=\"500\" height=\"500\" />\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default Home;","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport {Home, Resume, Projects} from \"./containers\"\r\nconst AppRouter = props => (\r\n    <Switch>\r\n      {/* <Route exact path=\"/\" render={() => <Home />} /> */}\r\n      <Route exact path=\"/\" render={() => <Home />} />\r\n      <Route path=\"/Resume\" render={() => <Resume />} />\r\n      <Route path=\"/Projects\" render={() => <Projects />} />\r\n    </Switch>\r\n  );\r\n  \r\n  export default AppRouter;","import React, { Fragment } from 'react';\r\nimport './App.css';\r\nimport{ BrowserRouter, Route} from \"react-router-dom\"\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport AppRouter from \"./AppRouter\";\r\nimport { SelectBar } from \"./components\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Raleway\",\r\n    htmlFontSize: \"12\",\r\n  },\r\n\r\n});\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <MuiThemeProvider theme = { theme }>\r\n        <BrowserRouter>\r\n          <SelectBar>\r\n            <Route render={() => <AppRouter />}></Route>\r\n          </SelectBar>\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}