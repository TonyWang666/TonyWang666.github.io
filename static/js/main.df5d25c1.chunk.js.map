{"version":3,"sources":["content/images/homePicture.jpg","content/images/github.svg","content/images/gmail.svg","content/images/linkedin.svg","content/documents/resume.pdf","components/selectBar.js","components/Links.js","containers/PastProjects/MovieZone.js","containers/PastProjects/Voluntu.js","containers/PastProjects/YearOfSong.js","containers/Projects.js","containers/Resume.js","containers/Home.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","withRouter","props","classes","React","useState","open","setOpen","useTheme","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","Drawer","variant","paper","direction","Divider","List","text","icon","redirectTo","map","ListItem","button","key","history","push","ListItemIcon","ListItemText","primary","children","Links","href","target","rel","src","gmailIcon","alt","height","githubIcon","linkedinIcon","MovieZone","Voluntu","YearOfSong","Projects","state","option","change","bind","x","console","log","this","setState","Typography","Button","Component","Resume","title","pdfProfile","Home","Box","HomePicture","AppRouter","exact","path","render","createMuiTheme","typography","fontFamily","htmlFontSize","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df5d25c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homePicture.c78ada96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.b986b4fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.619231ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.e98fca66.pdf\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n    AppBar,\n    Divider,\n    IconButton,\n    CssBaseline,\n    Drawer,\n    List,\n    Toolbar,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n} from \"@material-ui/core\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(8) + 1\n      }\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  }));\n\nconst CustomAppBar = props => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n    \n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    return (\n        <div className = {classes.root}>\n          <CssBaseline />\n          <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n              [classes.appBarShift]: open\n              })}\n          >\n              <Toolbar>\n                  <IconButton\n                      color=\"inherit\"\n                      aria-label=\"open drawer\"\n                      onClick = {handleDrawerOpen}  \n                      className={clsx(classes.menuButton, {\n                          [classes.hide]: open\n                      })}                  \n                  >\n                      <MenuIcon />\n                  </IconButton>\n              </Toolbar>\n          </AppBar>\n          <Drawer\n              variant=\"permanent\"\n              className={clsx(classes.drawer, {\n                  [classes.drawerOpen]: open,\n                  [classes.drawerClose]: !open\n              })}\n              classes={{\n                  paper: clsx({\n                  [classes.drawerOpen]: open,\n                  [classes.drawerClose]: !open\n                  })\n              }}\n              open = {open}\n          >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n              <Divider />\n              <List>\n                  {[\n                      { text: \"Home\", icon: <HomeIcon />, redirectTo: \"/\" },\n                      { text: \"Resume\", icon: <DescriptionIcon />, redirectTo: \"/Resume\" },\n                      { text: \"Projects\", icon: <BuildIcon />, redirectTo: \"/Projects\" },\n                  ].map(({ text, icon, redirectTo}) => (\n                      <ListItem\n                          button\n                          key = {text}\n                          onClick = {() => {\n                              props.history.push(redirectTo);\n                          }}\n                      >\n                          <ListItemIcon>{icon}</ListItemIcon>\n                          <ListItemText primary = {text} />\n                      </ListItem>\n                  ))}\n              </List>\n              <Divider />\n          </Drawer>\n          {props.children}\n        </div>\n    );\n};\n\nexport default withRouter(CustomAppBar);\n","\nimport React from \"react\";\nimport { githubIcon, gmailIcon, linkedinIcon } from \"../content/images\";\nconst Links = () => (\n  <div className=\"icon-link\">\n    <a\n      href=\"mailto:tonyjiaxiangwang@gmail.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src={gmailIcon} alt=\"gmail-link\" height=\"30px\" width=\"30px\" />\n    </a>\n    <a\n      href=\"https://github.com/TonyWang666\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src={githubIcon} alt=\"github-link\" height=\"30px\" width=\"30px\" />\n    </a>\n    <a\n      href=\"https://www.linkedin.com/in/jiaixiang-wang-02960913a\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src={linkedinIcon} alt=\"LinkedIn-link\" height=\"30px\" width=\"30px\" />\n    </a>\n  </div>\n);\n\nexport default Links;\n","import React, { Fragment } from \"react\";\nconst MovieZone = () => (\n    <Fragment>\n        <h1> Movie Zone </h1>\n        <h3> Project Description</h3>\n        <p className = \"des text\">The Movie Zone is a website I made in class 122B. Honestly, it is my child. I spent 3 months on this product with all my passion and tons of \"hairs\"\n        <br /><br />I used microservice with MySql for its database. There are 4 databases work separately and independently.\n        <br /><br />I implemented the back-end with Java, which is my most proficient language.\n        <br /><br />The front-end I used JavaScript and jQuery!\n        </p>\n    </Fragment>\n);\n\nexport default MovieZone;","import React, { Fragment } from \"react\";\nconst Voluntu = () => (\n    <Fragment>\n        <h1> Voluntu </h1>\n        <h3> Project Description</h3>\n        <p className = \"des text\">The Voluntu is a website I participated last year. Generally speaking, it is a website that arranges the \n        volunteer activities in orange county. \n        <br /><br />Student can register as a volunteer and schedule the time for joining different events.\n        <br /><br />I implemented the DashBoard with antd library for showing the hour of graph.\n        <br /><br />This project will be able to help thousands of student in south california to participate in voluneer activities.\n        </p>\n    </Fragment>\n);\n\nexport default Voluntu;","import React, { Fragment } from \"react\";\nconst YearOfSong = () => (\n    <Fragment>\n        <h1>Predicting Year of Song </h1> \n        <h3> Project Description</h3>\n        <p className = \"des text\">\"Predicting year of song\" is a data-mining project that can predict the year of the song given the attributes\n        of the songs such as timbre...... \n        <br /><br />Our training data set contains most of the American music from 1960s to 2010s.\n        <br /><br />The langauge of this project is Python, and also contains techniques of Principal Component Analysis, Linear Regression, Support Vector Machine\n        <br /><br />The error rate is less than 20%\n        <br /><br />I worked with a team of 3 and finished in 2 weeks.\n        </p>\n    </Fragment>\n);\n\nexport default YearOfSong;","import React, { Fragment, Component } from \"react\";\nimport { Typography, Button } from \"@material-ui/core/\";\nimport { Links } from \"../components\"\nimport {MovieZone, Voluntu, YearOfSong} from \"./PastProjects\";\nclass Projects extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      option: 1,\n    }\n    this.change = this.change.bind(this);\n  }\n  change(x = 0){\n    console.log(\"Inside change, x is: \" + x);\n    this.setState({\n      option : x\n    });\n    console.log(\"after change, option is: \" + this.state.option);\n  }\n  render(){\n    return (\n      <Fragment>\n        <div className=\"split left\">\n          <header className=\"App-header\">\n            <Typography variant=\"h1\">Project List</Typography>\n              <br />\n              <Button onClick={() => this.change(0)}>Movie Zone</Button>\n              <Button onClick={() => this.change(1)}>Peer Genius</Button>\n              <Button onClick={() => this.change(2)}>Predicting Year of Song</Button>\n          </header>\n          <footer> <Links /> </footer>\n        </div>\n        <div className=\"split right\">\n          {console.log(\"option here is : \" + this.state.option)}\n          { this.state.option === 0 ? <MovieZone/> : this.state.option === 1 ? <Voluntu /> : <YearOfSong />}\n        </div> \n      </Fragment>\n    )\n  }\n}\nexport default Projects;\n","import React, { Fragment } from \"react\";\nimport pdfProfile from \"../content/documents/resume.pdf\"\nimport { Typography } from \"@material-ui/core/\";\nimport { Links } from \"../components\";\n\nconst Resume = () => (\n      <Fragment>\n        <div className=\"split left\">\n          <Typography variant=\"h1\">Resume</Typography>\n          <br />\n          <footer> <Links /> </footer>\n        </div>\n        <div className=\"split right\">\n          <iframe\n            title=\"resume\"\n            src={ pdfProfile }\n            width=\"100%\"\n            height=\"100%\"\n          ></iframe>\n        </div>\n      </Fragment>\n);\n\nexport default Resume;\n","import React, { Fragment } from \"react\";\nimport { HomePicture } from \"../content/images\";\nimport { Box, Typography } from \"@material-ui/core/\";\nimport { Links } from \"../components\";\n\nconst Home = () => (\n    <Fragment>\n        <div className=\"split left text\">\n            <Typography variant=\"h5\">\n                <Box>\n                    <strong>Welcome to Tony's website!</strong> <br /> <br />\n                    My name is Jiaxiang Wang(Tony).<br />\n                    Currently, I am computer science major student at <strong>University of California, Irvine</strong>. <br />\n                    My expected gradutating time is <strong> June 2020 </strong>. <br />\n                    I have experience both with the <strong>Front-end </strong>and <strong>Back-end</strong> developing.\n                </Box>\n                <br />\n                <Box>\n                    Below is my work experience: <br />\n                    Front-End Developer, Baidu Inc. Shenzhen, China\n                    <br />\n                    Software Development Intern, Ardent Labs, Irvine, CA\n                </Box>\n            </Typography>\n            <footer> <Links /> </footer>\n        </div>\n        <div className = \"split right text\">\n            <img src = {HomePicture} alt=\"PictureOfTony\" width=\"500\" height=\"500\" />\n        </div>\n    </Fragment>\n);\n\nexport default Home;","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\";\nimport {Home, Resume, Projects} from \"./containers\"\nconst AppRouter = props => (\n    <Switch>\n      {/* <Route exact path=\"/\" render={() => <Home />} /> */}\n      <Route exact path=\"/\" render={() => <Home />} />\n      <Route path=\"/Resume\" render={() => <Resume />} />\n      <Route path=\"/Projects\" render={() => <Projects />} />\n    </Switch>\n  );\n  \n  export default AppRouter;","import React, { Fragment } from 'react';\nimport './App.css';\nimport{ BrowserRouter, Route} from \"react-router-dom\"\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport AppRouter from \"./AppRouter\";\nimport { SelectBar } from \"./components\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Raleway\",\n    htmlFontSize: \"12\",\n  },\n\n});\n\nconst App = () => {\n  return (\n    <Fragment>\n      <MuiThemeProvider theme = { theme }>\n        <BrowserRouter>\n          <SelectBar>\n            <Route render={() => <AppRouter />}></Route>\n          </SelectBar>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}